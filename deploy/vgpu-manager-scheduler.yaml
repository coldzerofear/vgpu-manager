apiVersion: v1
kind: ServiceAccount
metadata:
  name: vgpu-manager-scheduler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vgpu-manager-scheduler-as-kube-scheduler
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vgpu-manager-scheduler-as-volume-scheduler
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vgpu-manager-scheduler-as-daemon-set-controller
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:controller:daemon-set-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vgpu-manager-scheduler:leader-election-role
  namespace: kube-system
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get","list","watch","create","update","delete"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vgpu-manager-scheduler:node-role
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","list","watch","update","patch"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["patch","update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vgpu-manager-scheduler-as-node-role
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: vgpu-manager-scheduler:node-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vgpu-manager-scheduler-as-leader-election-role
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: Role
  name: vgpu-manager-scheduler:leader-election-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vgpu-manager-scheduler-config
  namespace: kube-system
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: true
      resourceName: vgpu-manager-scheduler
      resourceNamespace: kube-system
    profiles:
    - schedulerName: vgpu-scheduler
    extenders:
    - urlPrefix: "http://127.0.0.1:3456/scheduler"
      filterVerb: filter
      bindVerb: bind
      enableHTTPS: false
      nodeCacheCapable: true
      weight: 1
      httpTimeout: 30s
      managedResources:
      - name: "nvidia.com/vgpu-number"
        ignoredByScheduler: true
      - name: "nvidia.com/vgpu-core"
        ignoredByScheduler: true
      - name: "nvidia.com/vgpu-memory"
        ignoredByScheduler: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vgpu-manager-scheduler
  name: vgpu-manager-scheduler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: vgpu-manager-scheduler
  replicas: 1
  template:
    metadata:
      labels:
        app: vgpu-manager-scheduler
    spec:
      serviceAccountName: vgpu-manager-scheduler
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: system-node-critical
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
      containers:
        - image: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.28.15
          imagePullPolicy: IfNotPresent
          name: scheduler
          command:
            - kube-scheduler
            - --config=/config/config.yaml
            - --v=4
          resources:
            requests:
              cpu: 100m
          volumeMounts:
            - name: scheduler-config
              mountPath: /config
        - image: coldzerofear/vgpu-manager:latest
          imagePullPolicy: IfNotPresent
          name: scheduler-extender
          command:
            - scheduler
            - --server-bind-port=3456
            - --v=4
          ports:
            - name: http
              containerPort: 3456
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3456
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 3456
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: scheduler-config
          configMap:
            name: vgpu-manager-scheduler-config
---
apiVersion: v1
kind: Service
metadata:
  name: vgpu-manager-scheduler
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 3456
      protocol: TCP
      targetPort: http
  selector:
    app: vgpu-manager-scheduler
  type: ClusterIP