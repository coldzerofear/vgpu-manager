apiVersion: v1
kind: ServiceAccount
metadata:
  name: vgpu-manager-scheduler
  namespace: kube-system
---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: Role
#metadata:
#  name: vgpu-manager-scheduler
#  namespace: kube-system
#rules:
#  - apiGroups: ["coordination.k8s.io"]
#    resources: ["leases"]
#    verbs: ["get", "list", "watch", "create", "update", "delete"]
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  name: vgpu-manager-scheduler
#rules:
#  - apiGroups: [""]
#    resources: ["nodes"]
#    verbs: ["get","list", "watch","update","patch"]
#  - apiGroups: [""]
#    resources: ["nodes/status"]
#    verbs: ["patch", "update"]
#  - apiGroups: [""]
#    resources: ["events"]
#    verbs: ["create","patch","update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vgpu-scheduler-as-kube-scheduler
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vgpu-scheduler-as-volume-scheduler
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:volume-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vgpu-scheduler-as-daemon-set-controller
subjects:
  - kind: ServiceAccount
    name: vgpu-manager-scheduler
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: system:controller:daemon-set-controller
  apiGroup: rbac.authorization.k8s.io
---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: vgpu-scheduler-as-node-role
#subjects:
#  - kind: ServiceAccount
#    name: vgpu-manager-scheduler
#    namespace: kube-system
#roleRef:
#  kind: ClusterRole
#  name: gpu-scheduler:node-role
#  apiGroup: rbac.authorization.k8s.io
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: RoleBinding
#metadata:
#  name: gpu-scheduler-as-leader-election-role
#  namespace: kube-system
#subjects:
#  - kind: ServiceAccount
#    name: vgpu-manager-scheduler
#    namespace: kube-system
#roleRef:
#  kind: Role
#  name: gpu-scheduler:leader-election-role
#  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: vgpu-manager-scheduler
  namespace: kube-system
spec:
  ports:
    - port: 3456
      protocol: TCP
      targetPort: 3456
  selector:
    app: vgpu-manager-scheduler
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vgpu-manager-scheduler-config
  namespace: kube-system
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    leaderElection:
      leaderElect: true
      resourceName: vgpu-manager-scheduler
      resourceNamespace: kube-system
    profiles:
    - schedulerName: vgpu-scheduler
    extenders:
    - urlPrefix: "http://127.0.0.1:3456/scheduler"
      filterVerb: filter
      bindVerb: bind
      enableHTTPS: false
      nodeCacheCapable: true
      weight: 1
      httpTimeout: 30s
      managedResources:
      - name: "nvidia.com/vgpu-number"
        ignoredByScheduler: true
      - name: "nvidia.com/vgpu-core"
        ignoredByScheduler: true
      - name: "nvidia.com/vgpu-memory"
        ignoredByScheduler: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vgpu-manager-scheduler
  name: vgpu-manager-scheduler
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: vgpu-manager-scheduler
  replicas: 1
  template:
    metadata:
      labels:
        app: vgpu-manager-scheduler
    spec:
      serviceAccountName: vgpu-manager-scheduler
      priorityClassName: system-node-critical
      containers:
        - image: registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler:v1.27.4
          imagePullPolicy: IfNotPresent
          name: scheduler
          command:
            - kube-scheduler
            - --config=/config/config.yaml
            - -v=4
          resources:
            requests:
              cpu: 100m
          volumeMounts:
            - name: scheduler-config
              mountPath: /config
        - image: coldzerofear/gpu-manager:latest
          name: gpu-scheduler-extender
          env:
            - name: LOG_LEVEL
              value: "4"
            - name: EXTRA_FLAGS
              # 根据KubeSchedulerConfiguration配置文件定义是否开启节点缓存
              value: "--nodeCacheCapable=true"
          ports:
            - containerPort: 3456
          resources:
            requests:
              cpu: "1"
              memory: 1Gi
            limits:
              cpu: "2"
              memory: 2Gi
      #          livenessProbe:
      #            failureThreshold: 8
      #            httpGet:
      #              host: 127.0.0.1
      #              path: /version
      #              port: 3456
      #              scheme: HTTP
      #            initialDelaySeconds: 10
      #            periodSeconds: 10
      #            timeoutSeconds: 15
      volumes:
        - name: scheduler-config
          configMap:
            name: vgpu-manager-scheduler-config